version: '3.8'

services:
  harmony-agent:
    image: ghcr.io/runbeam/harmony-agent:latest
    container_name: harmony-agent
    restart: unless-stopped
    
    # Required capabilities for WireGuard
    cap_add:
      - NET_ADMIN
      - IPC_LOCK
    
    # Network mode
    network_mode: host
    
    # Volumes
    volumes:
      - ./config:/etc/harmony-agent:ro
      - ./keys:/etc/harmony-agent/keys:ro
      - harmony-agent-run:/var/run
    
    # Environment variables
    environment:
      - RUST_LOG=info
      - harmony_agent_LOG_LEVEL=info
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
  
  # Optional: Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9091:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
  
  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus

volumes:
  harmony-agent-run:
  prometheus-data:
  grafana-data:
